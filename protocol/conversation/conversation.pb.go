// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: conversation/conversation.proto

package conversation

import (
	sdkws "github.com/eos/protocol/sdkws"
	wrapperspb "github.com/eos/protocol/wrapperspb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Conversation struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID           string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	ConversationID        string                 `protobuf:"bytes,2,opt,name=conversationID,proto3" json:"conversationID"`
	RecvMsgOpt            int32                  `protobuf:"varint,3,opt,name=recvMsgOpt,proto3" json:"recvMsgOpt"`
	ConversationType      int32                  `protobuf:"varint,4,opt,name=conversationType,proto3" json:"conversationType"`
	UserID                string                 `protobuf:"bytes,5,opt,name=userID,proto3" json:"userID"`
	GroupID               string                 `protobuf:"bytes,6,opt,name=groupID,proto3" json:"groupID"`
	IsPinned              bool                   `protobuf:"varint,7,opt,name=isPinned,proto3" json:"isPinned"`
	AttachedInfo          string                 `protobuf:"bytes,8,opt,name=attachedInfo,proto3" json:"attachedInfo"`
	IsPrivateChat         bool                   `protobuf:"varint,9,opt,name=isPrivateChat,proto3" json:"isPrivateChat"`
	GroupAtType           int32                  `protobuf:"varint,10,opt,name=groupAtType,proto3" json:"groupAtType"`
	Ex                    string                 `protobuf:"bytes,11,opt,name=ex,proto3" json:"ex"`
	BurnDuration          int32                  `protobuf:"varint,12,opt,name=burnDuration,proto3" json:"burnDuration"`
	MinSeq                int64                  `protobuf:"varint,13,opt,name=minSeq,proto3" json:"minSeq"`
	MaxSeq                int64                  `protobuf:"varint,14,opt,name=maxSeq,proto3" json:"maxSeq"`
	MsgDestructTime       int64                  `protobuf:"varint,15,opt,name=msgDestructTime,proto3" json:"msgDestructTime"`
	LatestMsgDestructTime int64                  `protobuf:"varint,16,opt,name=latestMsgDestructTime,proto3" json:"latestMsgDestructTime"`
	IsMsgDestruct         bool                   `protobuf:"varint,17,opt,name=isMsgDestruct,proto3" json:"isMsgDestruct"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	mi := &file_conversation_conversation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{0}
}

func (x *Conversation) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *Conversation) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *Conversation) GetRecvMsgOpt() int32 {
	if x != nil {
		return x.RecvMsgOpt
	}
	return 0
}

func (x *Conversation) GetConversationType() int32 {
	if x != nil {
		return x.ConversationType
	}
	return 0
}

func (x *Conversation) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Conversation) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *Conversation) GetIsPinned() bool {
	if x != nil {
		return x.IsPinned
	}
	return false
}

func (x *Conversation) GetAttachedInfo() string {
	if x != nil {
		return x.AttachedInfo
	}
	return ""
}

func (x *Conversation) GetIsPrivateChat() bool {
	if x != nil {
		return x.IsPrivateChat
	}
	return false
}

func (x *Conversation) GetGroupAtType() int32 {
	if x != nil {
		return x.GroupAtType
	}
	return 0
}

func (x *Conversation) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *Conversation) GetBurnDuration() int32 {
	if x != nil {
		return x.BurnDuration
	}
	return 0
}

func (x *Conversation) GetMinSeq() int64 {
	if x != nil {
		return x.MinSeq
	}
	return 0
}

func (x *Conversation) GetMaxSeq() int64 {
	if x != nil {
		return x.MaxSeq
	}
	return 0
}

func (x *Conversation) GetMsgDestructTime() int64 {
	if x != nil {
		return x.MsgDestructTime
	}
	return 0
}

func (x *Conversation) GetLatestMsgDestructTime() int64 {
	if x != nil {
		return x.LatestMsgDestructTime
	}
	return 0
}

func (x *Conversation) GetIsMsgDestruct() bool {
	if x != nil {
		return x.IsMsgDestruct
	}
	return false
}

type ConversationReq struct {
	state            protoimpl.MessageState  `protogen:"open.v1"`
	ConversationID   string                  `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	ConversationType int32                   `protobuf:"varint,2,opt,name=conversationType,proto3" json:"conversationType"`
	UserID           string                  `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID"`
	GroupID          string                  `protobuf:"bytes,4,opt,name=groupID,proto3" json:"groupID"`
	RecvMsgOpt       *wrapperspb.Int32Value  `protobuf:"bytes,5,opt,name=recvMsgOpt,proto3" json:"recvMsgOpt"`
	IsPinned         *wrapperspb.BoolValue   `protobuf:"bytes,6,opt,name=isPinned,proto3" json:"isPinned"`
	AttachedInfo     *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=attachedInfo,proto3" json:"attachedInfo"`
	IsPrivateChat    *wrapperspb.BoolValue   `protobuf:"bytes,8,opt,name=isPrivateChat,proto3" json:"isPrivateChat"`
	Ex               *wrapperspb.StringValue `protobuf:"bytes,9,opt,name=ex,proto3" json:"ex"`
	BurnDuration     *wrapperspb.Int32Value  `protobuf:"bytes,10,opt,name=burnDuration,proto3" json:"burnDuration"`
	MinSeq           *wrapperspb.Int64Value  `protobuf:"bytes,11,opt,name=minSeq,proto3" json:"minSeq"`
	MaxSeq           *wrapperspb.Int64Value  `protobuf:"bytes,12,opt,name=maxSeq,proto3" json:"maxSeq"`
	GroupAtType      *wrapperspb.Int32Value  `protobuf:"bytes,13,opt,name=groupAtType,proto3" json:"groupAtType"`
	MsgDestructTime  *wrapperspb.Int64Value  `protobuf:"bytes,14,opt,name=msgDestructTime,proto3" json:"msgDestructTime"`
	IsMsgDestruct    *wrapperspb.BoolValue   `protobuf:"bytes,15,opt,name=isMsgDestruct,proto3" json:"isMsgDestruct"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ConversationReq) Reset() {
	*x = ConversationReq{}
	mi := &file_conversation_conversation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationReq) ProtoMessage() {}

func (x *ConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationReq.ProtoReflect.Descriptor instead.
func (*ConversationReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{1}
}

func (x *ConversationReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *ConversationReq) GetConversationType() int32 {
	if x != nil {
		return x.ConversationType
	}
	return 0
}

func (x *ConversationReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ConversationReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *ConversationReq) GetRecvMsgOpt() *wrapperspb.Int32Value {
	if x != nil {
		return x.RecvMsgOpt
	}
	return nil
}

func (x *ConversationReq) GetIsPinned() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsPinned
	}
	return nil
}

func (x *ConversationReq) GetAttachedInfo() *wrapperspb.StringValue {
	if x != nil {
		return x.AttachedInfo
	}
	return nil
}

func (x *ConversationReq) GetIsPrivateChat() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsPrivateChat
	}
	return nil
}

func (x *ConversationReq) GetEx() *wrapperspb.StringValue {
	if x != nil {
		return x.Ex
	}
	return nil
}

func (x *ConversationReq) GetBurnDuration() *wrapperspb.Int32Value {
	if x != nil {
		return x.BurnDuration
	}
	return nil
}

func (x *ConversationReq) GetMinSeq() *wrapperspb.Int64Value {
	if x != nil {
		return x.MinSeq
	}
	return nil
}

func (x *ConversationReq) GetMaxSeq() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxSeq
	}
	return nil
}

func (x *ConversationReq) GetGroupAtType() *wrapperspb.Int32Value {
	if x != nil {
		return x.GroupAtType
	}
	return nil
}

func (x *ConversationReq) GetMsgDestructTime() *wrapperspb.Int64Value {
	if x != nil {
		return x.MsgDestructTime
	}
	return nil
}

func (x *ConversationReq) GetIsMsgDestruct() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsMsgDestruct
	}
	return nil
}

type SetConversationReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversation  *Conversation          `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConversationReq) Reset() {
	*x = SetConversationReq{}
	mi := &file_conversation_conversation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationReq) ProtoMessage() {}

func (x *SetConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationReq.ProtoReflect.Descriptor instead.
func (*SetConversationReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{2}
}

func (x *SetConversationReq) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

type SetConversationResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConversationResp) Reset() {
	*x = SetConversationResp{}
	mi := &file_conversation_conversation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationResp) ProtoMessage() {}

func (x *SetConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationResp.ProtoReflect.Descriptor instead.
func (*SetConversationResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{3}
}

type GetConversationReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	OwnerUserID    string                 `protobuf:"bytes,2,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetConversationReq) Reset() {
	*x = GetConversationReq{}
	mi := &file_conversation_conversation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationReq) ProtoMessage() {}

func (x *GetConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationReq.ProtoReflect.Descriptor instead.
func (*GetConversationReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{4}
}

func (x *GetConversationReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *GetConversationReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

type GetConversationResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversation  *Conversation          `protobuf:"bytes,2,opt,name=conversation,proto3" json:"conversation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationResp) Reset() {
	*x = GetConversationResp{}
	mi := &file_conversation_conversation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationResp) ProtoMessage() {}

func (x *GetConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationResp.ProtoReflect.Descriptor instead.
func (*GetConversationResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{5}
}

func (x *GetConversationResp) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

type GetSortedConversationListReq struct {
	state           protoimpl.MessageState   `protogen:"open.v1"`
	UserID          string                   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	ConversationIDs []string                 `protobuf:"bytes,2,rep,name=conversationIDs,proto3" json:"conversationIDs"`
	Pagination      *sdkws.RequestPagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetSortedConversationListReq) Reset() {
	*x = GetSortedConversationListReq{}
	mi := &file_conversation_conversation_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSortedConversationListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSortedConversationListReq) ProtoMessage() {}

func (x *GetSortedConversationListReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSortedConversationListReq.ProtoReflect.Descriptor instead.
func (*GetSortedConversationListReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{6}
}

func (x *GetSortedConversationListReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetSortedConversationListReq) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

func (x *GetSortedConversationListReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetSortedConversationListResp struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ConversationTotal int64                  `protobuf:"varint,1,opt,name=conversationTotal,proto3" json:"conversationTotal"`
	UnreadTotal       int64                  `protobuf:"varint,2,opt,name=unreadTotal,proto3" json:"unreadTotal"`
	ConversationElems []*ConversationElem    `protobuf:"bytes,3,rep,name=conversationElems,proto3" json:"conversationElems"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetSortedConversationListResp) Reset() {
	*x = GetSortedConversationListResp{}
	mi := &file_conversation_conversation_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSortedConversationListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSortedConversationListResp) ProtoMessage() {}

func (x *GetSortedConversationListResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSortedConversationListResp.ProtoReflect.Descriptor instead.
func (*GetSortedConversationListResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{7}
}

func (x *GetSortedConversationListResp) GetConversationTotal() int64 {
	if x != nil {
		return x.ConversationTotal
	}
	return 0
}

func (x *GetSortedConversationListResp) GetUnreadTotal() int64 {
	if x != nil {
		return x.UnreadTotal
	}
	return 0
}

func (x *GetSortedConversationListResp) GetConversationElems() []*ConversationElem {
	if x != nil {
		return x.ConversationElems
	}
	return nil
}

type ConversationElem struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	RecvMsgOpt     int32                  `protobuf:"varint,2,opt,name=recvMsgOpt,proto3" json:"recvMsgOpt"`
	UnreadCount    int64                  `protobuf:"varint,3,opt,name=unreadCount,proto3" json:"unreadCount"`
	IsPinned       bool                   `protobuf:"varint,4,opt,name=IsPinned,proto3" json:"IsPinned"`
	MsgInfo        *MsgInfo               `protobuf:"bytes,5,opt,name=msgInfo,proto3" json:"msgInfo"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConversationElem) Reset() {
	*x = ConversationElem{}
	mi := &file_conversation_conversation_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationElem) ProtoMessage() {}

func (x *ConversationElem) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationElem.ProtoReflect.Descriptor instead.
func (*ConversationElem) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{8}
}

func (x *ConversationElem) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *ConversationElem) GetRecvMsgOpt() int32 {
	if x != nil {
		return x.RecvMsgOpt
	}
	return 0
}

func (x *ConversationElem) GetUnreadCount() int64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *ConversationElem) GetIsPinned() bool {
	if x != nil {
		return x.IsPinned
	}
	return false
}

func (x *ConversationElem) GetMsgInfo() *MsgInfo {
	if x != nil {
		return x.MsgInfo
	}
	return nil
}

type MsgInfo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ServerMsgID       string                 `protobuf:"bytes,1,opt,name=serverMsgID,proto3" json:"serverMsgID"`
	ClientMsgID       string                 `protobuf:"bytes,2,opt,name=clientMsgID,proto3" json:"clientMsgID"`
	SessionType       int32                  `protobuf:"varint,3,opt,name=sessionType,proto3" json:"sessionType"`
	SendID            string                 `protobuf:"bytes,4,opt,name=sendID,proto3" json:"sendID"`
	RecvID            string                 `protobuf:"bytes,5,opt,name=recvID,proto3" json:"recvID"`
	SenderName        string                 `protobuf:"bytes,6,opt,name=senderName,proto3" json:"senderName"`
	FaceURL           string                 `protobuf:"bytes,7,opt,name=faceURL,proto3" json:"faceURL"`
	GroupID           string                 `protobuf:"bytes,8,opt,name=groupID,proto3" json:"groupID"`
	GroupName         string                 `protobuf:"bytes,9,opt,name=groupName,proto3" json:"groupName"`
	GroupFaceURL      string                 `protobuf:"bytes,10,opt,name=groupFaceURL,proto3" json:"groupFaceURL"`
	GroupType         int32                  `protobuf:"varint,11,opt,name=groupType,proto3" json:"groupType"`
	GroupMemberCount  uint32                 `protobuf:"varint,12,opt,name=groupMemberCount,proto3" json:"groupMemberCount"`
	LatestMsgRecvTime int64                  `protobuf:"varint,13,opt,name=LatestMsgRecvTime,proto3" json:"LatestMsgRecvTime"`
	MsgFrom           int32                  `protobuf:"varint,14,opt,name=msgFrom,proto3" json:"msgFrom"`
	ContentType       int32                  `protobuf:"varint,15,opt,name=contentType,proto3" json:"contentType"`
	Content           string                 `protobuf:"bytes,16,opt,name=content,proto3" json:"content"`
	Ex                string                 `protobuf:"bytes,17,opt,name=ex,proto3" json:"ex"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MsgInfo) Reset() {
	*x = MsgInfo{}
	mi := &file_conversation_conversation_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgInfo) ProtoMessage() {}

func (x *MsgInfo) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgInfo.ProtoReflect.Descriptor instead.
func (*MsgInfo) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{9}
}

func (x *MsgInfo) GetServerMsgID() string {
	if x != nil {
		return x.ServerMsgID
	}
	return ""
}

func (x *MsgInfo) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *MsgInfo) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *MsgInfo) GetSendID() string {
	if x != nil {
		return x.SendID
	}
	return ""
}

func (x *MsgInfo) GetRecvID() string {
	if x != nil {
		return x.RecvID
	}
	return ""
}

func (x *MsgInfo) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *MsgInfo) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *MsgInfo) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *MsgInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *MsgInfo) GetGroupFaceURL() string {
	if x != nil {
		return x.GroupFaceURL
	}
	return ""
}

func (x *MsgInfo) GetGroupType() int32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

func (x *MsgInfo) GetGroupMemberCount() uint32 {
	if x != nil {
		return x.GroupMemberCount
	}
	return 0
}

func (x *MsgInfo) GetLatestMsgRecvTime() int64 {
	if x != nil {
		return x.LatestMsgRecvTime
	}
	return 0
}

func (x *MsgInfo) GetMsgFrom() int32 {
	if x != nil {
		return x.MsgFrom
	}
	return 0
}

func (x *MsgInfo) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *MsgInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MsgInfo) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type GetConversationsReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID     string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	ConversationIDs []string               `protobuf:"bytes,2,rep,name=conversationIDs,proto3" json:"conversationIDs"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetConversationsReq) Reset() {
	*x = GetConversationsReq{}
	mi := &file_conversation_conversation_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsReq) ProtoMessage() {}

func (x *GetConversationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsReq.ProtoReflect.Descriptor instead.
func (*GetConversationsReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{10}
}

func (x *GetConversationsReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *GetConversationsReq) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

type GetConversationsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversations []*Conversation        `protobuf:"bytes,2,rep,name=conversations,proto3" json:"conversations"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationsResp) Reset() {
	*x = GetConversationsResp{}
	mi := &file_conversation_conversation_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsResp) ProtoMessage() {}

func (x *GetConversationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsResp.ProtoReflect.Descriptor instead.
func (*GetConversationsResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{11}
}

func (x *GetConversationsResp) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

type GetAllConversationsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID   string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllConversationsReq) Reset() {
	*x = GetAllConversationsReq{}
	mi := &file_conversation_conversation_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllConversationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllConversationsReq) ProtoMessage() {}

func (x *GetAllConversationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllConversationsReq.ProtoReflect.Descriptor instead.
func (*GetAllConversationsReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllConversationsReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

type GetAllConversationsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversations []*Conversation        `protobuf:"bytes,2,rep,name=conversations,proto3" json:"conversations"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllConversationsResp) Reset() {
	*x = GetAllConversationsResp{}
	mi := &file_conversation_conversation_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllConversationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllConversationsResp) ProtoMessage() {}

func (x *GetAllConversationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllConversationsResp.ProtoReflect.Descriptor instead.
func (*GetAllConversationsResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{13}
}

func (x *GetAllConversationsResp) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

type GetRecvMsgNotNotifyUserIDsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupID       string                 `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecvMsgNotNotifyUserIDsReq) Reset() {
	*x = GetRecvMsgNotNotifyUserIDsReq{}
	mi := &file_conversation_conversation_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecvMsgNotNotifyUserIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecvMsgNotNotifyUserIDsReq) ProtoMessage() {}

func (x *GetRecvMsgNotNotifyUserIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecvMsgNotNotifyUserIDsReq.ProtoReflect.Descriptor instead.
func (*GetRecvMsgNotNotifyUserIDsReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{14}
}

func (x *GetRecvMsgNotNotifyUserIDsReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

type GetRecvMsgNotNotifyUserIDsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIDs       []string               `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecvMsgNotNotifyUserIDsResp) Reset() {
	*x = GetRecvMsgNotNotifyUserIDsResp{}
	mi := &file_conversation_conversation_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecvMsgNotNotifyUserIDsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecvMsgNotNotifyUserIDsResp) ProtoMessage() {}

func (x *GetRecvMsgNotNotifyUserIDsResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecvMsgNotNotifyUserIDsResp.ProtoReflect.Descriptor instead.
func (*GetRecvMsgNotNotifyUserIDsResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{15}
}

func (x *GetRecvMsgNotNotifyUserIDsResp) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type CreateSingleChatConversationsReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RecvID           string                 `protobuf:"bytes,1,opt,name=recvID,proto3" json:"recvID"`
	SendID           string                 `protobuf:"bytes,2,opt,name=sendID,proto3" json:"sendID"`
	ConversationID   string                 `protobuf:"bytes,3,opt,name=conversationID,proto3" json:"conversationID"`
	ConversationType int32                  `protobuf:"varint,4,opt,name=conversationType,proto3" json:"conversationType"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateSingleChatConversationsReq) Reset() {
	*x = CreateSingleChatConversationsReq{}
	mi := &file_conversation_conversation_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSingleChatConversationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSingleChatConversationsReq) ProtoMessage() {}

func (x *CreateSingleChatConversationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSingleChatConversationsReq.ProtoReflect.Descriptor instead.
func (*CreateSingleChatConversationsReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{16}
}

func (x *CreateSingleChatConversationsReq) GetRecvID() string {
	if x != nil {
		return x.RecvID
	}
	return ""
}

func (x *CreateSingleChatConversationsReq) GetSendID() string {
	if x != nil {
		return x.SendID
	}
	return ""
}

func (x *CreateSingleChatConversationsReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *CreateSingleChatConversationsReq) GetConversationType() int32 {
	if x != nil {
		return x.ConversationType
	}
	return 0
}

type CreateSingleChatConversationsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSingleChatConversationsResp) Reset() {
	*x = CreateSingleChatConversationsResp{}
	mi := &file_conversation_conversation_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSingleChatConversationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSingleChatConversationsResp) ProtoMessage() {}

func (x *CreateSingleChatConversationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSingleChatConversationsResp.ProtoReflect.Descriptor instead.
func (*CreateSingleChatConversationsResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{17}
}

type CreateGroupChatConversationsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIDs       []string               `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs"`
	GroupID       string                 `protobuf:"bytes,2,opt,name=groupID,proto3" json:"groupID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupChatConversationsReq) Reset() {
	*x = CreateGroupChatConversationsReq{}
	mi := &file_conversation_conversation_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupChatConversationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupChatConversationsReq) ProtoMessage() {}

func (x *CreateGroupChatConversationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupChatConversationsReq.ProtoReflect.Descriptor instead.
func (*CreateGroupChatConversationsReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{18}
}

func (x *CreateGroupChatConversationsReq) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *CreateGroupChatConversationsReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

type CreateGroupChatConversationsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupChatConversationsResp) Reset() {
	*x = CreateGroupChatConversationsResp{}
	mi := &file_conversation_conversation_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupChatConversationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupChatConversationsResp) ProtoMessage() {}

func (x *CreateGroupChatConversationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupChatConversationsResp.ProtoReflect.Descriptor instead.
func (*CreateGroupChatConversationsResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{19}
}

type SetConversationMaxSeqReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	OwnerUserID    []string               `protobuf:"bytes,2,rep,name=ownerUserID,proto3" json:"ownerUserID"`
	MaxSeq         int64                  `protobuf:"varint,3,opt,name=maxSeq,proto3" json:"maxSeq"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetConversationMaxSeqReq) Reset() {
	*x = SetConversationMaxSeqReq{}
	mi := &file_conversation_conversation_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConversationMaxSeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationMaxSeqReq) ProtoMessage() {}

func (x *SetConversationMaxSeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationMaxSeqReq.ProtoReflect.Descriptor instead.
func (*SetConversationMaxSeqReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{20}
}

func (x *SetConversationMaxSeqReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *SetConversationMaxSeqReq) GetOwnerUserID() []string {
	if x != nil {
		return x.OwnerUserID
	}
	return nil
}

func (x *SetConversationMaxSeqReq) GetMaxSeq() int64 {
	if x != nil {
		return x.MaxSeq
	}
	return 0
}

type SetConversationMaxSeqResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConversationMaxSeqResp) Reset() {
	*x = SetConversationMaxSeqResp{}
	mi := &file_conversation_conversation_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConversationMaxSeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationMaxSeqResp) ProtoMessage() {}

func (x *SetConversationMaxSeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationMaxSeqResp.ProtoReflect.Descriptor instead.
func (*SetConversationMaxSeqResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{21}
}

type SetConversationMinSeqReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	OwnerUserID    []string               `protobuf:"bytes,2,rep,name=ownerUserID,proto3" json:"ownerUserID"`
	MinSeq         int64                  `protobuf:"varint,3,opt,name=minSeq,proto3" json:"minSeq"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetConversationMinSeqReq) Reset() {
	*x = SetConversationMinSeqReq{}
	mi := &file_conversation_conversation_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConversationMinSeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationMinSeqReq) ProtoMessage() {}

func (x *SetConversationMinSeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationMinSeqReq.ProtoReflect.Descriptor instead.
func (*SetConversationMinSeqReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{22}
}

func (x *SetConversationMinSeqReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *SetConversationMinSeqReq) GetOwnerUserID() []string {
	if x != nil {
		return x.OwnerUserID
	}
	return nil
}

func (x *SetConversationMinSeqReq) GetMinSeq() int64 {
	if x != nil {
		return x.MinSeq
	}
	return 0
}

type SetConversationMinSeqResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConversationMinSeqResp) Reset() {
	*x = SetConversationMinSeqResp{}
	mi := &file_conversation_conversation_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConversationMinSeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationMinSeqResp) ProtoMessage() {}

func (x *SetConversationMinSeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationMinSeqResp.ProtoReflect.Descriptor instead.
func (*SetConversationMinSeqResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{23}
}

type GetConversationIDsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationIDsReq) Reset() {
	*x = GetConversationIDsReq{}
	mi := &file_conversation_conversation_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationIDsReq) ProtoMessage() {}

func (x *GetConversationIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationIDsReq.ProtoReflect.Descriptor instead.
func (*GetConversationIDsReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{24}
}

func (x *GetConversationIDsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetConversationIDsResp struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConversationIDs []string               `protobuf:"bytes,1,rep,name=conversationIDs,proto3" json:"conversationIDs"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetConversationIDsResp) Reset() {
	*x = GetConversationIDsResp{}
	mi := &file_conversation_conversation_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationIDsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationIDsResp) ProtoMessage() {}

func (x *GetConversationIDsResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationIDsResp.ProtoReflect.Descriptor instead.
func (*GetConversationIDsResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{25}
}

func (x *GetConversationIDsResp) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

type SetConversationsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIDs       []string               `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs"`
	Conversation  *ConversationReq       `protobuf:"bytes,2,opt,name=conversation,proto3" json:"conversation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConversationsReq) Reset() {
	*x = SetConversationsReq{}
	mi := &file_conversation_conversation_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConversationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationsReq) ProtoMessage() {}

func (x *SetConversationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationsReq.ProtoReflect.Descriptor instead.
func (*SetConversationsReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{26}
}

func (x *SetConversationsReq) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *SetConversationsReq) GetConversation() *ConversationReq {
	if x != nil {
		return x.Conversation
	}
	return nil
}

type SetConversationsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConversationsResp) Reset() {
	*x = SetConversationsResp{}
	mi := &file_conversation_conversation_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConversationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationsResp) ProtoMessage() {}

func (x *SetConversationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationsResp.ProtoReflect.Descriptor instead.
func (*SetConversationsResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{27}
}

type GetUserConversationIDsHashReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerUserID   string                 `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserConversationIDsHashReq) Reset() {
	*x = GetUserConversationIDsHashReq{}
	mi := &file_conversation_conversation_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserConversationIDsHashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConversationIDsHashReq) ProtoMessage() {}

func (x *GetUserConversationIDsHashReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConversationIDsHashReq.ProtoReflect.Descriptor instead.
func (*GetUserConversationIDsHashReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{28}
}

func (x *GetUserConversationIDsHashReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

type GetUserConversationIDsHashResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          uint64                 `protobuf:"varint,1,opt,name=hash,proto3" json:"hash"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserConversationIDsHashResp) Reset() {
	*x = GetUserConversationIDsHashResp{}
	mi := &file_conversation_conversation_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserConversationIDsHashResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConversationIDsHashResp) ProtoMessage() {}

func (x *GetUserConversationIDsHashResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConversationIDsHashResp.ProtoReflect.Descriptor instead.
func (*GetUserConversationIDsHashResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{29}
}

func (x *GetUserConversationIDsHashResp) GetHash() uint64 {
	if x != nil {
		return x.Hash
	}
	return 0
}

type GetConversationsByConversationIDReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConversationIDs []string               `protobuf:"bytes,1,rep,name=conversationIDs,proto3" json:"conversationIDs"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetConversationsByConversationIDReq) Reset() {
	*x = GetConversationsByConversationIDReq{}
	mi := &file_conversation_conversation_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationsByConversationIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsByConversationIDReq) ProtoMessage() {}

func (x *GetConversationsByConversationIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsByConversationIDReq.ProtoReflect.Descriptor instead.
func (*GetConversationsByConversationIDReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{30}
}

func (x *GetConversationsByConversationIDReq) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

type GetConversationsByConversationIDResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversations []*Conversation        `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationsByConversationIDResp) Reset() {
	*x = GetConversationsByConversationIDResp{}
	mi := &file_conversation_conversation_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationsByConversationIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsByConversationIDResp) ProtoMessage() {}

func (x *GetConversationsByConversationIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsByConversationIDResp.ProtoReflect.Descriptor instead.
func (*GetConversationsByConversationIDResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{31}
}

func (x *GetConversationsByConversationIDResp) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

type GetConversationOfflinePushUserIDsReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	UserIDs        []string               `protobuf:"bytes,2,rep,name=userIDs,proto3" json:"userIDs"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetConversationOfflinePushUserIDsReq) Reset() {
	*x = GetConversationOfflinePushUserIDsReq{}
	mi := &file_conversation_conversation_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationOfflinePushUserIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationOfflinePushUserIDsReq) ProtoMessage() {}

func (x *GetConversationOfflinePushUserIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationOfflinePushUserIDsReq.ProtoReflect.Descriptor instead.
func (*GetConversationOfflinePushUserIDsReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{32}
}

func (x *GetConversationOfflinePushUserIDsReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *GetConversationOfflinePushUserIDsReq) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type GetConversationOfflinePushUserIDsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIDs       []string               `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationOfflinePushUserIDsResp) Reset() {
	*x = GetConversationOfflinePushUserIDsResp{}
	mi := &file_conversation_conversation_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationOfflinePushUserIDsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationOfflinePushUserIDsResp) ProtoMessage() {}

func (x *GetConversationOfflinePushUserIDsResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationOfflinePushUserIDsResp.ProtoReflect.Descriptor instead.
func (*GetConversationOfflinePushUserIDsResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{33}
}

func (x *GetConversationOfflinePushUserIDsResp) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type GetConversationNotReceiveMessageUserIDsReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConversationID string                 `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetConversationNotReceiveMessageUserIDsReq) Reset() {
	*x = GetConversationNotReceiveMessageUserIDsReq{}
	mi := &file_conversation_conversation_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationNotReceiveMessageUserIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationNotReceiveMessageUserIDsReq) ProtoMessage() {}

func (x *GetConversationNotReceiveMessageUserIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationNotReceiveMessageUserIDsReq.ProtoReflect.Descriptor instead.
func (*GetConversationNotReceiveMessageUserIDsReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{34}
}

func (x *GetConversationNotReceiveMessageUserIDsReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

type GetConversationNotReceiveMessageUserIDsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIDs       []string               `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationNotReceiveMessageUserIDsResp) Reset() {
	*x = GetConversationNotReceiveMessageUserIDsResp{}
	mi := &file_conversation_conversation_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationNotReceiveMessageUserIDsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationNotReceiveMessageUserIDsResp) ProtoMessage() {}

func (x *GetConversationNotReceiveMessageUserIDsResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationNotReceiveMessageUserIDsResp.ProtoReflect.Descriptor instead.
func (*GetConversationNotReceiveMessageUserIDsResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{35}
}

func (x *GetConversationNotReceiveMessageUserIDsResp) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type UpdateConversationReq struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	ConversationID        string                  `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	UserIDs               []string                `protobuf:"bytes,2,rep,name=userIDs,proto3" json:"userIDs"`
	RecvMsgOpt            *wrapperspb.Int32Value  `protobuf:"bytes,3,opt,name=recvMsgOpt,proto3" json:"recvMsgOpt"`
	IsPinned              *wrapperspb.BoolValue   `protobuf:"bytes,4,opt,name=isPinned,proto3" json:"isPinned"`
	AttachedInfo          *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=attachedInfo,proto3" json:"attachedInfo"`
	IsPrivateChat         *wrapperspb.BoolValue   `protobuf:"bytes,6,opt,name=isPrivateChat,proto3" json:"isPrivateChat"`
	Ex                    *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=ex,proto3" json:"ex"`
	BurnDuration          *wrapperspb.Int32Value  `protobuf:"bytes,8,opt,name=burnDuration,proto3" json:"burnDuration"`
	MinSeq                *wrapperspb.Int64Value  `protobuf:"bytes,9,opt,name=minSeq,proto3" json:"minSeq"`
	MaxSeq                *wrapperspb.Int64Value  `protobuf:"bytes,10,opt,name=maxSeq,proto3" json:"maxSeq"`
	GroupAtType           *wrapperspb.Int32Value  `protobuf:"bytes,11,opt,name=groupAtType,proto3" json:"groupAtType"`
	MsgDestructTime       *wrapperspb.Int64Value  `protobuf:"bytes,12,opt,name=msgDestructTime,proto3" json:"msgDestructTime"`
	IsMsgDestruct         *wrapperspb.BoolValue   `protobuf:"bytes,13,opt,name=isMsgDestruct,proto3" json:"isMsgDestruct"`
	LatestMsgDestructTime *wrapperspb.Int64Value  `protobuf:"bytes,14,opt,name=latestMsgDestructTime,proto3" json:"latestMsgDestructTime"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *UpdateConversationReq) Reset() {
	*x = UpdateConversationReq{}
	mi := &file_conversation_conversation_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConversationReq) ProtoMessage() {}

func (x *UpdateConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConversationReq.ProtoReflect.Descriptor instead.
func (*UpdateConversationReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateConversationReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *UpdateConversationReq) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *UpdateConversationReq) GetRecvMsgOpt() *wrapperspb.Int32Value {
	if x != nil {
		return x.RecvMsgOpt
	}
	return nil
}

func (x *UpdateConversationReq) GetIsPinned() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsPinned
	}
	return nil
}

func (x *UpdateConversationReq) GetAttachedInfo() *wrapperspb.StringValue {
	if x != nil {
		return x.AttachedInfo
	}
	return nil
}

func (x *UpdateConversationReq) GetIsPrivateChat() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsPrivateChat
	}
	return nil
}

func (x *UpdateConversationReq) GetEx() *wrapperspb.StringValue {
	if x != nil {
		return x.Ex
	}
	return nil
}

func (x *UpdateConversationReq) GetBurnDuration() *wrapperspb.Int32Value {
	if x != nil {
		return x.BurnDuration
	}
	return nil
}

func (x *UpdateConversationReq) GetMinSeq() *wrapperspb.Int64Value {
	if x != nil {
		return x.MinSeq
	}
	return nil
}

func (x *UpdateConversationReq) GetMaxSeq() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxSeq
	}
	return nil
}

func (x *UpdateConversationReq) GetGroupAtType() *wrapperspb.Int32Value {
	if x != nil {
		return x.GroupAtType
	}
	return nil
}

func (x *UpdateConversationReq) GetMsgDestructTime() *wrapperspb.Int64Value {
	if x != nil {
		return x.MsgDestructTime
	}
	return nil
}

func (x *UpdateConversationReq) GetIsMsgDestruct() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsMsgDestruct
	}
	return nil
}

func (x *UpdateConversationReq) GetLatestMsgDestructTime() *wrapperspb.Int64Value {
	if x != nil {
		return x.LatestMsgDestructTime
	}
	return nil
}

type UpdateConversationResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConversationResp) Reset() {
	*x = UpdateConversationResp{}
	mi := &file_conversation_conversation_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConversationResp) ProtoMessage() {}

func (x *UpdateConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConversationResp.ProtoReflect.Descriptor instead.
func (*UpdateConversationResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{37}
}

type GetFullOwnerConversationIDsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IdHash        uint64                 `protobuf:"varint,1,opt,name=idHash,proto3" json:"idHash"`
	UserID        string                 `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFullOwnerConversationIDsReq) Reset() {
	*x = GetFullOwnerConversationIDsReq{}
	mi := &file_conversation_conversation_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFullOwnerConversationIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFullOwnerConversationIDsReq) ProtoMessage() {}

func (x *GetFullOwnerConversationIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFullOwnerConversationIDsReq.ProtoReflect.Descriptor instead.
func (*GetFullOwnerConversationIDsReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{38}
}

func (x *GetFullOwnerConversationIDsReq) GetIdHash() uint64 {
	if x != nil {
		return x.IdHash
	}
	return 0
}

func (x *GetFullOwnerConversationIDsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetFullOwnerConversationIDsResp struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Version         uint64                 `protobuf:"varint,1,opt,name=version,proto3" json:"version"`
	VersionID       string                 `protobuf:"bytes,2,opt,name=versionID,proto3" json:"versionID"`
	Equal           bool                   `protobuf:"varint,3,opt,name=equal,proto3" json:"equal"`
	ConversationIDs []string               `protobuf:"bytes,4,rep,name=conversationIDs,proto3" json:"conversationIDs"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetFullOwnerConversationIDsResp) Reset() {
	*x = GetFullOwnerConversationIDsResp{}
	mi := &file_conversation_conversation_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFullOwnerConversationIDsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFullOwnerConversationIDsResp) ProtoMessage() {}

func (x *GetFullOwnerConversationIDsResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFullOwnerConversationIDsResp.ProtoReflect.Descriptor instead.
func (*GetFullOwnerConversationIDsResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{39}
}

func (x *GetFullOwnerConversationIDsResp) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetFullOwnerConversationIDsResp) GetVersionID() string {
	if x != nil {
		return x.VersionID
	}
	return ""
}

func (x *GetFullOwnerConversationIDsResp) GetEqual() bool {
	if x != nil {
		return x.Equal
	}
	return false
}

func (x *GetFullOwnerConversationIDsResp) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

type GetIncrementalConversationReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	VersionID     string                 `protobuf:"bytes,2,opt,name=versionID,proto3" json:"versionID"`
	Version       uint64                 `protobuf:"varint,3,opt,name=version,proto3" json:"version"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIncrementalConversationReq) Reset() {
	*x = GetIncrementalConversationReq{}
	mi := &file_conversation_conversation_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIncrementalConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncrementalConversationReq) ProtoMessage() {}

func (x *GetIncrementalConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncrementalConversationReq.ProtoReflect.Descriptor instead.
func (*GetIncrementalConversationReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{40}
}

func (x *GetIncrementalConversationReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetIncrementalConversationReq) GetVersionID() string {
	if x != nil {
		return x.VersionID
	}
	return ""
}

func (x *GetIncrementalConversationReq) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GetIncrementalConversationResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint64                 `protobuf:"varint,1,opt,name=version,proto3" json:"version"`
	VersionID     string                 `protobuf:"bytes,2,opt,name=versionID,proto3" json:"versionID"`
	Full          bool                   `protobuf:"varint,3,opt,name=full,proto3" json:"full"`
	Delete        []string               `protobuf:"bytes,4,rep,name=delete,proto3" json:"delete"`
	Insert        []*Conversation        `protobuf:"bytes,5,rep,name=insert,proto3" json:"insert"`
	Update        []*Conversation        `protobuf:"bytes,6,rep,name=update,proto3" json:"update"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIncrementalConversationResp) Reset() {
	*x = GetIncrementalConversationResp{}
	mi := &file_conversation_conversation_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIncrementalConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncrementalConversationResp) ProtoMessage() {}

func (x *GetIncrementalConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncrementalConversationResp.ProtoReflect.Descriptor instead.
func (*GetIncrementalConversationResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{41}
}

func (x *GetIncrementalConversationResp) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetIncrementalConversationResp) GetVersionID() string {
	if x != nil {
		return x.VersionID
	}
	return ""
}

func (x *GetIncrementalConversationResp) GetFull() bool {
	if x != nil {
		return x.Full
	}
	return false
}

func (x *GetIncrementalConversationResp) GetDelete() []string {
	if x != nil {
		return x.Delete
	}
	return nil
}

func (x *GetIncrementalConversationResp) GetInsert() []*Conversation {
	if x != nil {
		return x.Insert
	}
	return nil
}

func (x *GetIncrementalConversationResp) GetUpdate() []*Conversation {
	if x != nil {
		return x.Update
	}
	return nil
}

type GetOwnerConversationReq struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	UserID        string                   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	Pagination    *sdkws.RequestPagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOwnerConversationReq) Reset() {
	*x = GetOwnerConversationReq{}
	mi := &file_conversation_conversation_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOwnerConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOwnerConversationReq) ProtoMessage() {}

func (x *GetOwnerConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOwnerConversationReq.ProtoReflect.Descriptor instead.
func (*GetOwnerConversationReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{42}
}

func (x *GetOwnerConversationReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetOwnerConversationReq) GetPagination() *sdkws.RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetOwnerConversationResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Conversations []*Conversation        `protobuf:"bytes,2,rep,name=conversations,proto3" json:"conversations"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOwnerConversationResp) Reset() {
	*x = GetOwnerConversationResp{}
	mi := &file_conversation_conversation_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOwnerConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOwnerConversationResp) ProtoMessage() {}

func (x *GetOwnerConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOwnerConversationResp.ProtoReflect.Descriptor instead.
func (*GetOwnerConversationResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{43}
}

func (x *GetOwnerConversationResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetOwnerConversationResp) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

type GetConversationsNeedClearMsgReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationsNeedClearMsgReq) Reset() {
	*x = GetConversationsNeedClearMsgReq{}
	mi := &file_conversation_conversation_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationsNeedClearMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsNeedClearMsgReq) ProtoMessage() {}

func (x *GetConversationsNeedClearMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsNeedClearMsgReq.ProtoReflect.Descriptor instead.
func (*GetConversationsNeedClearMsgReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{44}
}

type GetConversationsNeedClearMsgResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conversations []*Conversation        `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationsNeedClearMsgResp) Reset() {
	*x = GetConversationsNeedClearMsgResp{}
	mi := &file_conversation_conversation_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationsNeedClearMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsNeedClearMsgResp) ProtoMessage() {}

func (x *GetConversationsNeedClearMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsNeedClearMsgResp.ProtoReflect.Descriptor instead.
func (*GetConversationsNeedClearMsgResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{45}
}

func (x *GetConversationsNeedClearMsgResp) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

type GetNotNotifyConversationIDsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotNotifyConversationIDsReq) Reset() {
	*x = GetNotNotifyConversationIDsReq{}
	mi := &file_conversation_conversation_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotNotifyConversationIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotNotifyConversationIDsReq) ProtoMessage() {}

func (x *GetNotNotifyConversationIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotNotifyConversationIDsReq.ProtoReflect.Descriptor instead.
func (*GetNotNotifyConversationIDsReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{46}
}

func (x *GetNotNotifyConversationIDsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetNotNotifyConversationIDsResp struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConversationIDs []string               `protobuf:"bytes,1,rep,name=conversationIDs,proto3" json:"conversationIDs"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetNotNotifyConversationIDsResp) Reset() {
	*x = GetNotNotifyConversationIDsResp{}
	mi := &file_conversation_conversation_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotNotifyConversationIDsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotNotifyConversationIDsResp) ProtoMessage() {}

func (x *GetNotNotifyConversationIDsResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotNotifyConversationIDsResp.ProtoReflect.Descriptor instead.
func (*GetNotNotifyConversationIDsResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{47}
}

func (x *GetNotNotifyConversationIDsResp) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

type GetPinnedConversationIDsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPinnedConversationIDsReq) Reset() {
	*x = GetPinnedConversationIDsReq{}
	mi := &file_conversation_conversation_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPinnedConversationIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPinnedConversationIDsReq) ProtoMessage() {}

func (x *GetPinnedConversationIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPinnedConversationIDsReq.ProtoReflect.Descriptor instead.
func (*GetPinnedConversationIDsReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{48}
}

func (x *GetPinnedConversationIDsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetPinnedConversationIDsResp struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConversationIDs []string               `protobuf:"bytes,1,rep,name=conversationIDs,proto3" json:"conversationIDs"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetPinnedConversationIDsResp) Reset() {
	*x = GetPinnedConversationIDsResp{}
	mi := &file_conversation_conversation_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPinnedConversationIDsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPinnedConversationIDsResp) ProtoMessage() {}

func (x *GetPinnedConversationIDsResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPinnedConversationIDsResp.ProtoReflect.Descriptor instead.
func (*GetPinnedConversationIDsResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{49}
}

func (x *GetPinnedConversationIDsResp) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

type ClearUserConversationMsgReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearUserConversationMsgReq) Reset() {
	*x = ClearUserConversationMsgReq{}
	mi := &file_conversation_conversation_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearUserConversationMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearUserConversationMsgReq) ProtoMessage() {}

func (x *ClearUserConversationMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearUserConversationMsgReq.ProtoReflect.Descriptor instead.
func (*ClearUserConversationMsgReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{50}
}

func (x *ClearUserConversationMsgReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ClearUserConversationMsgReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ClearUserConversationMsgResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearUserConversationMsgResp) Reset() {
	*x = ClearUserConversationMsgResp{}
	mi := &file_conversation_conversation_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearUserConversationMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearUserConversationMsgResp) ProtoMessage() {}

func (x *ClearUserConversationMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearUserConversationMsgResp.ProtoReflect.Descriptor instead.
func (*ClearUserConversationMsgResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{51}
}

func (x *ClearUserConversationMsgResp) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UpdateConversationsByUserReq struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	UserID        string                  `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	Ex            *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=ex,proto3" json:"ex"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConversationsByUserReq) Reset() {
	*x = UpdateConversationsByUserReq{}
	mi := &file_conversation_conversation_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConversationsByUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConversationsByUserReq) ProtoMessage() {}

func (x *UpdateConversationsByUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConversationsByUserReq.ProtoReflect.Descriptor instead.
func (*UpdateConversationsByUserReq) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{52}
}

func (x *UpdateConversationsByUserReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateConversationsByUserReq) GetEx() *wrapperspb.StringValue {
	if x != nil {
		return x.Ex
	}
	return nil
}

type UpdateConversationsByUserResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConversationsByUserResp) Reset() {
	*x = UpdateConversationsByUserResp{}
	mi := &file_conversation_conversation_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConversationsByUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConversationsByUserResp) ProtoMessage() {}

func (x *UpdateConversationsByUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_conversation_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConversationsByUserResp.ProtoReflect.Descriptor instead.
func (*UpdateConversationsByUserResp) Descriptor() ([]byte, []int) {
	return file_conversation_conversation_proto_rawDescGZIP(), []int{53}
}

var File_conversation_conversation_proto protoreflect.FileDescriptor

const file_conversation_conversation_proto_rawDesc = "" +
	"\n" +
	"\x1fconversation/conversation.proto\x12\x10eos.conversation\x1a\x11sdkws/sdkws.proto\x1a\x1bwrapperspb/wrapperspb.proto\"\xc8\x04\n" +
	"\fConversation\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\x12&\n" +
	"\x0econversationID\x18\x02 \x01(\tR\x0econversationID\x12\x1e\n" +
	"\n" +
	"recvMsgOpt\x18\x03 \x01(\x05R\n" +
	"recvMsgOpt\x12*\n" +
	"\x10conversationType\x18\x04 \x01(\x05R\x10conversationType\x12\x16\n" +
	"\x06userID\x18\x05 \x01(\tR\x06userID\x12\x18\n" +
	"\agroupID\x18\x06 \x01(\tR\agroupID\x12\x1a\n" +
	"\bisPinned\x18\a \x01(\bR\bisPinned\x12\"\n" +
	"\fattachedInfo\x18\b \x01(\tR\fattachedInfo\x12$\n" +
	"\risPrivateChat\x18\t \x01(\bR\risPrivateChat\x12 \n" +
	"\vgroupAtType\x18\n" +
	" \x01(\x05R\vgroupAtType\x12\x0e\n" +
	"\x02ex\x18\v \x01(\tR\x02ex\x12\"\n" +
	"\fburnDuration\x18\f \x01(\x05R\fburnDuration\x12\x16\n" +
	"\x06minSeq\x18\r \x01(\x03R\x06minSeq\x12\x16\n" +
	"\x06maxSeq\x18\x0e \x01(\x03R\x06maxSeq\x12(\n" +
	"\x0fmsgDestructTime\x18\x0f \x01(\x03R\x0fmsgDestructTime\x124\n" +
	"\x15latestMsgDestructTime\x18\x10 \x01(\x03R\x15latestMsgDestructTime\x12$\n" +
	"\risMsgDestruct\x18\x11 \x01(\bR\risMsgDestruct\"\x90\x06\n" +
	"\x0fConversationReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12*\n" +
	"\x10conversationType\x18\x02 \x01(\x05R\x10conversationType\x12\x16\n" +
	"\x06userID\x18\x03 \x01(\tR\x06userID\x12\x18\n" +
	"\agroupID\x18\x04 \x01(\tR\agroupID\x128\n" +
	"\n" +
	"recvMsgOpt\x18\x05 \x01(\v2\x18.eos.protobuf.Int32ValueR\n" +
	"recvMsgOpt\x123\n" +
	"\bisPinned\x18\x06 \x01(\v2\x17.eos.protobuf.BoolValueR\bisPinned\x12=\n" +
	"\fattachedInfo\x18\a \x01(\v2\x19.eos.protobuf.StringValueR\fattachedInfo\x12=\n" +
	"\risPrivateChat\x18\b \x01(\v2\x17.eos.protobuf.BoolValueR\risPrivateChat\x12)\n" +
	"\x02ex\x18\t \x01(\v2\x19.eos.protobuf.StringValueR\x02ex\x12<\n" +
	"\fburnDuration\x18\n" +
	" \x01(\v2\x18.eos.protobuf.Int32ValueR\fburnDuration\x120\n" +
	"\x06minSeq\x18\v \x01(\v2\x18.eos.protobuf.Int64ValueR\x06minSeq\x120\n" +
	"\x06maxSeq\x18\f \x01(\v2\x18.eos.protobuf.Int64ValueR\x06maxSeq\x12:\n" +
	"\vgroupAtType\x18\r \x01(\v2\x18.eos.protobuf.Int32ValueR\vgroupAtType\x12B\n" +
	"\x0fmsgDestructTime\x18\x0e \x01(\v2\x18.eos.protobuf.Int64ValueR\x0fmsgDestructTime\x12=\n" +
	"\risMsgDestruct\x18\x0f \x01(\v2\x17.eos.protobuf.BoolValueR\risMsgDestruct\"X\n" +
	"\x12SetConversationReq\x12B\n" +
	"\fconversation\x18\x01 \x01(\v2\x1e.eos.conversation.ConversationR\fconversation\"\x15\n" +
	"\x13SetConversationResp\"^\n" +
	"\x12GetConversationReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12 \n" +
	"\vownerUserID\x18\x02 \x01(\tR\vownerUserID\"Y\n" +
	"\x13GetConversationResp\x12B\n" +
	"\fconversation\x18\x02 \x01(\v2\x1e.eos.conversation.ConversationR\fconversation\"\x9e\x01\n" +
	"\x1cGetSortedConversationListReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12(\n" +
	"\x0fconversationIDs\x18\x02 \x03(\tR\x0fconversationIDs\x12<\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2\x1c.eos.sdkws.RequestPaginationR\n" +
	"pagination\"\xc1\x01\n" +
	"\x1dGetSortedConversationListResp\x12,\n" +
	"\x11conversationTotal\x18\x01 \x01(\x03R\x11conversationTotal\x12 \n" +
	"\vunreadTotal\x18\x02 \x01(\x03R\vunreadTotal\x12P\n" +
	"\x11conversationElems\x18\x03 \x03(\v2\".eos.conversation.ConversationElemR\x11conversationElems\"\xcd\x01\n" +
	"\x10ConversationElem\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12\x1e\n" +
	"\n" +
	"recvMsgOpt\x18\x02 \x01(\x05R\n" +
	"recvMsgOpt\x12 \n" +
	"\vunreadCount\x18\x03 \x01(\x03R\vunreadCount\x12\x1a\n" +
	"\bIsPinned\x18\x04 \x01(\bR\bIsPinned\x123\n" +
	"\amsgInfo\x18\x05 \x01(\v2\x19.eos.conversation.MsgInfoR\amsgInfo\"\x93\x04\n" +
	"\aMsgInfo\x12 \n" +
	"\vserverMsgID\x18\x01 \x01(\tR\vserverMsgID\x12 \n" +
	"\vclientMsgID\x18\x02 \x01(\tR\vclientMsgID\x12 \n" +
	"\vsessionType\x18\x03 \x01(\x05R\vsessionType\x12\x16\n" +
	"\x06sendID\x18\x04 \x01(\tR\x06sendID\x12\x16\n" +
	"\x06recvID\x18\x05 \x01(\tR\x06recvID\x12\x1e\n" +
	"\n" +
	"senderName\x18\x06 \x01(\tR\n" +
	"senderName\x12\x18\n" +
	"\afaceURL\x18\a \x01(\tR\afaceURL\x12\x18\n" +
	"\agroupID\x18\b \x01(\tR\agroupID\x12\x1c\n" +
	"\tgroupName\x18\t \x01(\tR\tgroupName\x12\"\n" +
	"\fgroupFaceURL\x18\n" +
	" \x01(\tR\fgroupFaceURL\x12\x1c\n" +
	"\tgroupType\x18\v \x01(\x05R\tgroupType\x12*\n" +
	"\x10groupMemberCount\x18\f \x01(\rR\x10groupMemberCount\x12,\n" +
	"\x11LatestMsgRecvTime\x18\r \x01(\x03R\x11LatestMsgRecvTime\x12\x18\n" +
	"\amsgFrom\x18\x0e \x01(\x05R\amsgFrom\x12 \n" +
	"\vcontentType\x18\x0f \x01(\x05R\vcontentType\x12\x18\n" +
	"\acontent\x18\x10 \x01(\tR\acontent\x12\x0e\n" +
	"\x02ex\x18\x11 \x01(\tR\x02ex\"a\n" +
	"\x13GetConversationsReq\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\x12(\n" +
	"\x0fconversationIDs\x18\x02 \x03(\tR\x0fconversationIDs\"\\\n" +
	"\x14GetConversationsResp\x12D\n" +
	"\rconversations\x18\x02 \x03(\v2\x1e.eos.conversation.ConversationR\rconversations\":\n" +
	"\x16GetAllConversationsReq\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\"_\n" +
	"\x17GetAllConversationsResp\x12D\n" +
	"\rconversations\x18\x02 \x03(\v2\x1e.eos.conversation.ConversationR\rconversations\"9\n" +
	"\x1dGetRecvMsgNotNotifyUserIDsReq\x12\x18\n" +
	"\agroupID\x18\x01 \x01(\tR\agroupID\":\n" +
	"\x1eGetRecvMsgNotNotifyUserIDsResp\x12\x18\n" +
	"\auserIDs\x18\x01 \x03(\tR\auserIDs\"\xa6\x01\n" +
	" CreateSingleChatConversationsReq\x12\x16\n" +
	"\x06recvID\x18\x01 \x01(\tR\x06recvID\x12\x16\n" +
	"\x06sendID\x18\x02 \x01(\tR\x06sendID\x12&\n" +
	"\x0econversationID\x18\x03 \x01(\tR\x0econversationID\x12*\n" +
	"\x10conversationType\x18\x04 \x01(\x05R\x10conversationType\"#\n" +
	"!CreateSingleChatConversationsResp\"U\n" +
	"\x1fCreateGroupChatConversationsReq\x12\x18\n" +
	"\auserIDs\x18\x01 \x03(\tR\auserIDs\x12\x18\n" +
	"\agroupID\x18\x02 \x01(\tR\agroupID\"\"\n" +
	" CreateGroupChatConversationsResp\"|\n" +
	"\x18SetConversationMaxSeqReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12 \n" +
	"\vownerUserID\x18\x02 \x03(\tR\vownerUserID\x12\x16\n" +
	"\x06maxSeq\x18\x03 \x01(\x03R\x06maxSeq\"\x1b\n" +
	"\x19SetConversationMaxSeqResp\"|\n" +
	"\x18SetConversationMinSeqReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12 \n" +
	"\vownerUserID\x18\x02 \x03(\tR\vownerUserID\x12\x16\n" +
	"\x06minSeq\x18\x03 \x01(\x03R\x06minSeq\"\x1b\n" +
	"\x19SetConversationMinSeqResp\"/\n" +
	"\x15GetConversationIDsReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\"B\n" +
	"\x16GetConversationIDsResp\x12(\n" +
	"\x0fconversationIDs\x18\x01 \x03(\tR\x0fconversationIDs\"v\n" +
	"\x13SetConversationsReq\x12\x18\n" +
	"\auserIDs\x18\x01 \x03(\tR\auserIDs\x12E\n" +
	"\fconversation\x18\x02 \x01(\v2!.eos.conversation.ConversationReqR\fconversation\"\x16\n" +
	"\x14SetConversationsResp\"A\n" +
	"\x1dGetUserConversationIDsHashReq\x12 \n" +
	"\vownerUserID\x18\x01 \x01(\tR\vownerUserID\"4\n" +
	"\x1eGetUserConversationIDsHashResp\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\x04R\x04hash\"O\n" +
	"#GetConversationsByConversationIDReq\x12(\n" +
	"\x0fconversationIDs\x18\x01 \x03(\tR\x0fconversationIDs\"l\n" +
	"$GetConversationsByConversationIDResp\x12D\n" +
	"\rconversations\x18\x01 \x03(\v2\x1e.eos.conversation.ConversationR\rconversations\"h\n" +
	"$GetConversationOfflinePushUserIDsReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12\x18\n" +
	"\auserIDs\x18\x02 \x03(\tR\auserIDs\"A\n" +
	"%GetConversationOfflinePushUserIDsResp\x12\x18\n" +
	"\auserIDs\x18\x01 \x03(\tR\auserIDs\"T\n" +
	"*GetConversationNotReceiveMessageUserIDsReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\"G\n" +
	"+GetConversationNotReceiveMessageUserIDsResp\x12\x18\n" +
	"\auserIDs\x18\x01 \x03(\tR\auserIDs\"\xa2\x06\n" +
	"\x15UpdateConversationReq\x12&\n" +
	"\x0econversationID\x18\x01 \x01(\tR\x0econversationID\x12\x18\n" +
	"\auserIDs\x18\x02 \x03(\tR\auserIDs\x128\n" +
	"\n" +
	"recvMsgOpt\x18\x03 \x01(\v2\x18.eos.protobuf.Int32ValueR\n" +
	"recvMsgOpt\x123\n" +
	"\bisPinned\x18\x04 \x01(\v2\x17.eos.protobuf.BoolValueR\bisPinned\x12=\n" +
	"\fattachedInfo\x18\x05 \x01(\v2\x19.eos.protobuf.StringValueR\fattachedInfo\x12=\n" +
	"\risPrivateChat\x18\x06 \x01(\v2\x17.eos.protobuf.BoolValueR\risPrivateChat\x12)\n" +
	"\x02ex\x18\a \x01(\v2\x19.eos.protobuf.StringValueR\x02ex\x12<\n" +
	"\fburnDuration\x18\b \x01(\v2\x18.eos.protobuf.Int32ValueR\fburnDuration\x120\n" +
	"\x06minSeq\x18\t \x01(\v2\x18.eos.protobuf.Int64ValueR\x06minSeq\x120\n" +
	"\x06maxSeq\x18\n" +
	" \x01(\v2\x18.eos.protobuf.Int64ValueR\x06maxSeq\x12:\n" +
	"\vgroupAtType\x18\v \x01(\v2\x18.eos.protobuf.Int32ValueR\vgroupAtType\x12B\n" +
	"\x0fmsgDestructTime\x18\f \x01(\v2\x18.eos.protobuf.Int64ValueR\x0fmsgDestructTime\x12=\n" +
	"\risMsgDestruct\x18\r \x01(\v2\x17.eos.protobuf.BoolValueR\risMsgDestruct\x12N\n" +
	"\x15latestMsgDestructTime\x18\x0e \x01(\v2\x18.eos.protobuf.Int64ValueR\x15latestMsgDestructTime\"\x18\n" +
	"\x16UpdateConversationResp\"P\n" +
	"\x1eGetFullOwnerConversationIDsReq\x12\x16\n" +
	"\x06idHash\x18\x01 \x01(\x04R\x06idHash\x12\x16\n" +
	"\x06userID\x18\x02 \x01(\tR\x06userID\"\x99\x01\n" +
	"\x1fGetFullOwnerConversationIDsResp\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x04R\aversion\x12\x1c\n" +
	"\tversionID\x18\x02 \x01(\tR\tversionID\x12\x14\n" +
	"\x05equal\x18\x03 \x01(\bR\x05equal\x12(\n" +
	"\x0fconversationIDs\x18\x04 \x03(\tR\x0fconversationIDs\"o\n" +
	"\x1dGetIncrementalConversationReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x1c\n" +
	"\tversionID\x18\x02 \x01(\tR\tversionID\x12\x18\n" +
	"\aversion\x18\x03 \x01(\x04R\aversion\"\xf4\x01\n" +
	"\x1eGetIncrementalConversationResp\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x04R\aversion\x12\x1c\n" +
	"\tversionID\x18\x02 \x01(\tR\tversionID\x12\x12\n" +
	"\x04full\x18\x03 \x01(\bR\x04full\x12\x16\n" +
	"\x06delete\x18\x04 \x03(\tR\x06delete\x126\n" +
	"\x06insert\x18\x05 \x03(\v2\x1e.eos.conversation.ConversationR\x06insert\x126\n" +
	"\x06update\x18\x06 \x03(\v2\x1e.eos.conversation.ConversationR\x06update\"o\n" +
	"\x17GetOwnerConversationReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12<\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x1c.eos.sdkws.RequestPaginationR\n" +
	"pagination\"v\n" +
	"\x18GetOwnerConversationResp\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\x12D\n" +
	"\rconversations\x18\x02 \x03(\v2\x1e.eos.conversation.ConversationR\rconversations\"!\n" +
	"\x1fGetConversationsNeedClearMsgReq\"h\n" +
	" GetConversationsNeedClearMsgResp\x12D\n" +
	"\rconversations\x18\x01 \x03(\v2\x1e.eos.conversation.ConversationR\rconversations\"8\n" +
	"\x1eGetNotNotifyConversationIDsReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\"K\n" +
	"\x1fGetNotNotifyConversationIDsResp\x12(\n" +
	"\x0fconversationIDs\x18\x01 \x03(\tR\x0fconversationIDs\"5\n" +
	"\x1bGetPinnedConversationIDsReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\"H\n" +
	"\x1cGetPinnedConversationIDsResp\x12(\n" +
	"\x0fconversationIDs\x18\x01 \x03(\tR\x0fconversationIDs\"Q\n" +
	"\x1bClearUserConversationMsgReq\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"4\n" +
	"\x1cClearUserConversationMsgResp\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\"a\n" +
	"\x1cUpdateConversationsByUserReq\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12)\n" +
	"\x02ex\x18\x02 \x01(\v2\x19.eos.protobuf.StringValueR\x02ex\"\x1f\n" +
	"\x1dUpdateConversationsByUserResp2\x93\x18\n" +
	"\fconversation\x12^\n" +
	"\x0fGetConversation\x12$.eos.conversation.GetConversationReq\x1a%.eos.conversation.GetConversationResp\x12|\n" +
	"\x19GetSortedConversationList\x12..eos.conversation.GetSortedConversationListReq\x1a/.eos.conversation.GetSortedConversationListResp\x12j\n" +
	"\x13GetAllConversations\x12(.eos.conversation.GetAllConversationsReq\x1a).eos.conversation.GetAllConversationsResp\x12a\n" +
	"\x10GetConversations\x12%.eos.conversation.GetConversationsReq\x1a&.eos.conversation.GetConversationsResp\x12^\n" +
	"\x0fSetConversation\x12$.eos.conversation.SetConversationReq\x1a%.eos.conversation.SetConversationResp\x12\x7f\n" +
	"\x1aGetRecvMsgNotNotifyUserIDs\x12/.eos.conversation.GetRecvMsgNotNotifyUserIDsReq\x1a0.eos.conversation.GetRecvMsgNotNotifyUserIDsResp\x12\x88\x01\n" +
	"\x1dCreateSingleChatConversations\x122.eos.conversation.CreateSingleChatConversationsReq\x1a3.eos.conversation.CreateSingleChatConversationsResp\x12\x85\x01\n" +
	"\x1cCreateGroupChatConversations\x121.eos.conversation.CreateGroupChatConversationsReq\x1a2.eos.conversation.CreateGroupChatConversationsResp\x12p\n" +
	"\x15SetConversationMaxSeq\x12*.eos.conversation.SetConversationMaxSeqReq\x1a+.eos.conversation.SetConversationMaxSeqResp\x12p\n" +
	"\x15SetConversationMinSeq\x12*.eos.conversation.SetConversationMinSeqReq\x1a+.eos.conversation.SetConversationMinSeqResp\x12g\n" +
	"\x12GetConversationIDs\x12'.eos.conversation.GetConversationIDsReq\x1a(.eos.conversation.GetConversationIDsResp\x12a\n" +
	"\x10SetConversations\x12%.eos.conversation.SetConversationsReq\x1a&.eos.conversation.SetConversationsResp\x12\x7f\n" +
	"\x1aGetUserConversationIDsHash\x12/.eos.conversation.GetUserConversationIDsHashReq\x1a0.eos.conversation.GetUserConversationIDsHashResp\x12\x91\x01\n" +
	" GetConversationsByConversationID\x125.eos.conversation.GetConversationsByConversationIDReq\x1a6.eos.conversation.GetConversationsByConversationIDResp\x12\x94\x01\n" +
	"!GetConversationOfflinePushUserIDs\x126.eos.conversation.GetConversationOfflinePushUserIDsReq\x1a7.eos.conversation.GetConversationOfflinePushUserIDsResp\x12\xa6\x01\n" +
	"'GetConversationNotReceiveMessageUserIDs\x12<.eos.conversation.GetConversationNotReceiveMessageUserIDsReq\x1a=.eos.conversation.GetConversationNotReceiveMessageUserIDsResp\x12g\n" +
	"\x12UpdateConversation\x12'.eos.conversation.UpdateConversationReq\x1a(.eos.conversation.UpdateConversationResp\x12\x82\x01\n" +
	"\x1bGetFullOwnerConversationIDs\x120.eos.conversation.GetFullOwnerConversationIDsReq\x1a1.eos.conversation.GetFullOwnerConversationIDsResp\x12\x7f\n" +
	"\x1aGetIncrementalConversation\x12/.eos.conversation.GetIncrementalConversationReq\x1a0.eos.conversation.GetIncrementalConversationResp\x12m\n" +
	"\x14GetOwnerConversation\x12).eos.conversation.GetOwnerConversationReq\x1a*.eos.conversation.GetOwnerConversationResp\x12\x85\x01\n" +
	"\x1cGetConversationsNeedClearMsg\x121.eos.conversation.GetConversationsNeedClearMsgReq\x1a2.eos.conversation.GetConversationsNeedClearMsgResp\x12\x82\x01\n" +
	"\x1bGetNotNotifyConversationIDs\x120.eos.conversation.GetNotNotifyConversationIDsReq\x1a1.eos.conversation.GetNotNotifyConversationIDsResp\x12y\n" +
	"\x18GetPinnedConversationIDs\x12-.eos.conversation.GetPinnedConversationIDsReq\x1a..eos.conversation.GetPinnedConversationIDsResp\x12y\n" +
	"\x18ClearUserConversationMsg\x12-.eos.conversation.ClearUserConversationMsgReq\x1a..eos.conversation.ClearUserConversationMsgResp\x12|\n" +
	"\x19UpdateConversationsByUser\x12..eos.conversation.UpdateConversationsByUserReq\x1a/.eos.conversation.UpdateConversationsByUserRespB&Z$github.com/eos/protocol/conversationb\x06proto3"

var (
	file_conversation_conversation_proto_rawDescOnce sync.Once
	file_conversation_conversation_proto_rawDescData []byte
)

func file_conversation_conversation_proto_rawDescGZIP() []byte {
	file_conversation_conversation_proto_rawDescOnce.Do(func() {
		file_conversation_conversation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_conversation_conversation_proto_rawDesc), len(file_conversation_conversation_proto_rawDesc)))
	})
	return file_conversation_conversation_proto_rawDescData
}

var file_conversation_conversation_proto_msgTypes = make([]protoimpl.MessageInfo, 54)
var file_conversation_conversation_proto_goTypes = []any{
	(*Conversation)(nil),                                // 0: eos.conversation.Conversation
	(*ConversationReq)(nil),                             // 1: eos.conversation.ConversationReq
	(*SetConversationReq)(nil),                          // 2: eos.conversation.SetConversationReq
	(*SetConversationResp)(nil),                         // 3: eos.conversation.SetConversationResp
	(*GetConversationReq)(nil),                          // 4: eos.conversation.GetConversationReq
	(*GetConversationResp)(nil),                         // 5: eos.conversation.GetConversationResp
	(*GetSortedConversationListReq)(nil),                // 6: eos.conversation.GetSortedConversationListReq
	(*GetSortedConversationListResp)(nil),               // 7: eos.conversation.GetSortedConversationListResp
	(*ConversationElem)(nil),                            // 8: eos.conversation.ConversationElem
	(*MsgInfo)(nil),                                     // 9: eos.conversation.MsgInfo
	(*GetConversationsReq)(nil),                         // 10: eos.conversation.GetConversationsReq
	(*GetConversationsResp)(nil),                        // 11: eos.conversation.GetConversationsResp
	(*GetAllConversationsReq)(nil),                      // 12: eos.conversation.GetAllConversationsReq
	(*GetAllConversationsResp)(nil),                     // 13: eos.conversation.GetAllConversationsResp
	(*GetRecvMsgNotNotifyUserIDsReq)(nil),               // 14: eos.conversation.GetRecvMsgNotNotifyUserIDsReq
	(*GetRecvMsgNotNotifyUserIDsResp)(nil),              // 15: eos.conversation.GetRecvMsgNotNotifyUserIDsResp
	(*CreateSingleChatConversationsReq)(nil),            // 16: eos.conversation.CreateSingleChatConversationsReq
	(*CreateSingleChatConversationsResp)(nil),           // 17: eos.conversation.CreateSingleChatConversationsResp
	(*CreateGroupChatConversationsReq)(nil),             // 18: eos.conversation.CreateGroupChatConversationsReq
	(*CreateGroupChatConversationsResp)(nil),            // 19: eos.conversation.CreateGroupChatConversationsResp
	(*SetConversationMaxSeqReq)(nil),                    // 20: eos.conversation.SetConversationMaxSeqReq
	(*SetConversationMaxSeqResp)(nil),                   // 21: eos.conversation.SetConversationMaxSeqResp
	(*SetConversationMinSeqReq)(nil),                    // 22: eos.conversation.SetConversationMinSeqReq
	(*SetConversationMinSeqResp)(nil),                   // 23: eos.conversation.SetConversationMinSeqResp
	(*GetConversationIDsReq)(nil),                       // 24: eos.conversation.GetConversationIDsReq
	(*GetConversationIDsResp)(nil),                      // 25: eos.conversation.GetConversationIDsResp
	(*SetConversationsReq)(nil),                         // 26: eos.conversation.SetConversationsReq
	(*SetConversationsResp)(nil),                        // 27: eos.conversation.SetConversationsResp
	(*GetUserConversationIDsHashReq)(nil),               // 28: eos.conversation.GetUserConversationIDsHashReq
	(*GetUserConversationIDsHashResp)(nil),              // 29: eos.conversation.GetUserConversationIDsHashResp
	(*GetConversationsByConversationIDReq)(nil),         // 30: eos.conversation.GetConversationsByConversationIDReq
	(*GetConversationsByConversationIDResp)(nil),        // 31: eos.conversation.GetConversationsByConversationIDResp
	(*GetConversationOfflinePushUserIDsReq)(nil),        // 32: eos.conversation.GetConversationOfflinePushUserIDsReq
	(*GetConversationOfflinePushUserIDsResp)(nil),       // 33: eos.conversation.GetConversationOfflinePushUserIDsResp
	(*GetConversationNotReceiveMessageUserIDsReq)(nil),  // 34: eos.conversation.GetConversationNotReceiveMessageUserIDsReq
	(*GetConversationNotReceiveMessageUserIDsResp)(nil), // 35: eos.conversation.GetConversationNotReceiveMessageUserIDsResp
	(*UpdateConversationReq)(nil),                       // 36: eos.conversation.UpdateConversationReq
	(*UpdateConversationResp)(nil),                      // 37: eos.conversation.UpdateConversationResp
	(*GetFullOwnerConversationIDsReq)(nil),              // 38: eos.conversation.GetFullOwnerConversationIDsReq
	(*GetFullOwnerConversationIDsResp)(nil),             // 39: eos.conversation.GetFullOwnerConversationIDsResp
	(*GetIncrementalConversationReq)(nil),               // 40: eos.conversation.GetIncrementalConversationReq
	(*GetIncrementalConversationResp)(nil),              // 41: eos.conversation.GetIncrementalConversationResp
	(*GetOwnerConversationReq)(nil),                     // 42: eos.conversation.GetOwnerConversationReq
	(*GetOwnerConversationResp)(nil),                    // 43: eos.conversation.GetOwnerConversationResp
	(*GetConversationsNeedClearMsgReq)(nil),             // 44: eos.conversation.GetConversationsNeedClearMsgReq
	(*GetConversationsNeedClearMsgResp)(nil),            // 45: eos.conversation.GetConversationsNeedClearMsgResp
	(*GetNotNotifyConversationIDsReq)(nil),              // 46: eos.conversation.GetNotNotifyConversationIDsReq
	(*GetNotNotifyConversationIDsResp)(nil),             // 47: eos.conversation.GetNotNotifyConversationIDsResp
	(*GetPinnedConversationIDsReq)(nil),                 // 48: eos.conversation.GetPinnedConversationIDsReq
	(*GetPinnedConversationIDsResp)(nil),                // 49: eos.conversation.GetPinnedConversationIDsResp
	(*ClearUserConversationMsgReq)(nil),                 // 50: eos.conversation.ClearUserConversationMsgReq
	(*ClearUserConversationMsgResp)(nil),                // 51: eos.conversation.ClearUserConversationMsgResp
	(*UpdateConversationsByUserReq)(nil),                // 52: eos.conversation.UpdateConversationsByUserReq
	(*UpdateConversationsByUserResp)(nil),               // 53: eos.conversation.UpdateConversationsByUserResp
	(*wrapperspb.Int32Value)(nil),                       // 54: eos.protobuf.Int32Value
	(*wrapperspb.BoolValue)(nil),                        // 55: eos.protobuf.BoolValue
	(*wrapperspb.StringValue)(nil),                      // 56: eos.protobuf.StringValue
	(*wrapperspb.Int64Value)(nil),                       // 57: eos.protobuf.Int64Value
	(*sdkws.RequestPagination)(nil),                     // 58: eos.sdkws.RequestPagination
}
var file_conversation_conversation_proto_depIdxs = []int32{
	54, // 0: eos.conversation.ConversationReq.recvMsgOpt:type_name -> eos.protobuf.Int32Value
	55, // 1: eos.conversation.ConversationReq.isPinned:type_name -> eos.protobuf.BoolValue
	56, // 2: eos.conversation.ConversationReq.attachedInfo:type_name -> eos.protobuf.StringValue
	55, // 3: eos.conversation.ConversationReq.isPrivateChat:type_name -> eos.protobuf.BoolValue
	56, // 4: eos.conversation.ConversationReq.ex:type_name -> eos.protobuf.StringValue
	54, // 5: eos.conversation.ConversationReq.burnDuration:type_name -> eos.protobuf.Int32Value
	57, // 6: eos.conversation.ConversationReq.minSeq:type_name -> eos.protobuf.Int64Value
	57, // 7: eos.conversation.ConversationReq.maxSeq:type_name -> eos.protobuf.Int64Value
	54, // 8: eos.conversation.ConversationReq.groupAtType:type_name -> eos.protobuf.Int32Value
	57, // 9: eos.conversation.ConversationReq.msgDestructTime:type_name -> eos.protobuf.Int64Value
	55, // 10: eos.conversation.ConversationReq.isMsgDestruct:type_name -> eos.protobuf.BoolValue
	0,  // 11: eos.conversation.SetConversationReq.conversation:type_name -> eos.conversation.Conversation
	0,  // 12: eos.conversation.GetConversationResp.conversation:type_name -> eos.conversation.Conversation
	58, // 13: eos.conversation.GetSortedConversationListReq.pagination:type_name -> eos.sdkws.RequestPagination
	8,  // 14: eos.conversation.GetSortedConversationListResp.conversationElems:type_name -> eos.conversation.ConversationElem
	9,  // 15: eos.conversation.ConversationElem.msgInfo:type_name -> eos.conversation.MsgInfo
	0,  // 16: eos.conversation.GetConversationsResp.conversations:type_name -> eos.conversation.Conversation
	0,  // 17: eos.conversation.GetAllConversationsResp.conversations:type_name -> eos.conversation.Conversation
	1,  // 18: eos.conversation.SetConversationsReq.conversation:type_name -> eos.conversation.ConversationReq
	0,  // 19: eos.conversation.GetConversationsByConversationIDResp.conversations:type_name -> eos.conversation.Conversation
	54, // 20: eos.conversation.UpdateConversationReq.recvMsgOpt:type_name -> eos.protobuf.Int32Value
	55, // 21: eos.conversation.UpdateConversationReq.isPinned:type_name -> eos.protobuf.BoolValue
	56, // 22: eos.conversation.UpdateConversationReq.attachedInfo:type_name -> eos.protobuf.StringValue
	55, // 23: eos.conversation.UpdateConversationReq.isPrivateChat:type_name -> eos.protobuf.BoolValue
	56, // 24: eos.conversation.UpdateConversationReq.ex:type_name -> eos.protobuf.StringValue
	54, // 25: eos.conversation.UpdateConversationReq.burnDuration:type_name -> eos.protobuf.Int32Value
	57, // 26: eos.conversation.UpdateConversationReq.minSeq:type_name -> eos.protobuf.Int64Value
	57, // 27: eos.conversation.UpdateConversationReq.maxSeq:type_name -> eos.protobuf.Int64Value
	54, // 28: eos.conversation.UpdateConversationReq.groupAtType:type_name -> eos.protobuf.Int32Value
	57, // 29: eos.conversation.UpdateConversationReq.msgDestructTime:type_name -> eos.protobuf.Int64Value
	55, // 30: eos.conversation.UpdateConversationReq.isMsgDestruct:type_name -> eos.protobuf.BoolValue
	57, // 31: eos.conversation.UpdateConversationReq.latestMsgDestructTime:type_name -> eos.protobuf.Int64Value
	0,  // 32: eos.conversation.GetIncrementalConversationResp.insert:type_name -> eos.conversation.Conversation
	0,  // 33: eos.conversation.GetIncrementalConversationResp.update:type_name -> eos.conversation.Conversation
	58, // 34: eos.conversation.GetOwnerConversationReq.pagination:type_name -> eos.sdkws.RequestPagination
	0,  // 35: eos.conversation.GetOwnerConversationResp.conversations:type_name -> eos.conversation.Conversation
	0,  // 36: eos.conversation.GetConversationsNeedClearMsgResp.conversations:type_name -> eos.conversation.Conversation
	56, // 37: eos.conversation.UpdateConversationsByUserReq.ex:type_name -> eos.protobuf.StringValue
	4,  // 38: eos.conversation.conversation.GetConversation:input_type -> eos.conversation.GetConversationReq
	6,  // 39: eos.conversation.conversation.GetSortedConversationList:input_type -> eos.conversation.GetSortedConversationListReq
	12, // 40: eos.conversation.conversation.GetAllConversations:input_type -> eos.conversation.GetAllConversationsReq
	10, // 41: eos.conversation.conversation.GetConversations:input_type -> eos.conversation.GetConversationsReq
	2,  // 42: eos.conversation.conversation.SetConversation:input_type -> eos.conversation.SetConversationReq
	14, // 43: eos.conversation.conversation.GetRecvMsgNotNotifyUserIDs:input_type -> eos.conversation.GetRecvMsgNotNotifyUserIDsReq
	16, // 44: eos.conversation.conversation.CreateSingleChatConversations:input_type -> eos.conversation.CreateSingleChatConversationsReq
	18, // 45: eos.conversation.conversation.CreateGroupChatConversations:input_type -> eos.conversation.CreateGroupChatConversationsReq
	20, // 46: eos.conversation.conversation.SetConversationMaxSeq:input_type -> eos.conversation.SetConversationMaxSeqReq
	22, // 47: eos.conversation.conversation.SetConversationMinSeq:input_type -> eos.conversation.SetConversationMinSeqReq
	24, // 48: eos.conversation.conversation.GetConversationIDs:input_type -> eos.conversation.GetConversationIDsReq
	26, // 49: eos.conversation.conversation.SetConversations:input_type -> eos.conversation.SetConversationsReq
	28, // 50: eos.conversation.conversation.GetUserConversationIDsHash:input_type -> eos.conversation.GetUserConversationIDsHashReq
	30, // 51: eos.conversation.conversation.GetConversationsByConversationID:input_type -> eos.conversation.GetConversationsByConversationIDReq
	32, // 52: eos.conversation.conversation.GetConversationOfflinePushUserIDs:input_type -> eos.conversation.GetConversationOfflinePushUserIDsReq
	34, // 53: eos.conversation.conversation.GetConversationNotReceiveMessageUserIDs:input_type -> eos.conversation.GetConversationNotReceiveMessageUserIDsReq
	36, // 54: eos.conversation.conversation.UpdateConversation:input_type -> eos.conversation.UpdateConversationReq
	38, // 55: eos.conversation.conversation.GetFullOwnerConversationIDs:input_type -> eos.conversation.GetFullOwnerConversationIDsReq
	40, // 56: eos.conversation.conversation.GetIncrementalConversation:input_type -> eos.conversation.GetIncrementalConversationReq
	42, // 57: eos.conversation.conversation.GetOwnerConversation:input_type -> eos.conversation.GetOwnerConversationReq
	44, // 58: eos.conversation.conversation.GetConversationsNeedClearMsg:input_type -> eos.conversation.GetConversationsNeedClearMsgReq
	46, // 59: eos.conversation.conversation.GetNotNotifyConversationIDs:input_type -> eos.conversation.GetNotNotifyConversationIDsReq
	48, // 60: eos.conversation.conversation.GetPinnedConversationIDs:input_type -> eos.conversation.GetPinnedConversationIDsReq
	50, // 61: eos.conversation.conversation.ClearUserConversationMsg:input_type -> eos.conversation.ClearUserConversationMsgReq
	52, // 62: eos.conversation.conversation.UpdateConversationsByUser:input_type -> eos.conversation.UpdateConversationsByUserReq
	5,  // 63: eos.conversation.conversation.GetConversation:output_type -> eos.conversation.GetConversationResp
	7,  // 64: eos.conversation.conversation.GetSortedConversationList:output_type -> eos.conversation.GetSortedConversationListResp
	13, // 65: eos.conversation.conversation.GetAllConversations:output_type -> eos.conversation.GetAllConversationsResp
	11, // 66: eos.conversation.conversation.GetConversations:output_type -> eos.conversation.GetConversationsResp
	3,  // 67: eos.conversation.conversation.SetConversation:output_type -> eos.conversation.SetConversationResp
	15, // 68: eos.conversation.conversation.GetRecvMsgNotNotifyUserIDs:output_type -> eos.conversation.GetRecvMsgNotNotifyUserIDsResp
	17, // 69: eos.conversation.conversation.CreateSingleChatConversations:output_type -> eos.conversation.CreateSingleChatConversationsResp
	19, // 70: eos.conversation.conversation.CreateGroupChatConversations:output_type -> eos.conversation.CreateGroupChatConversationsResp
	21, // 71: eos.conversation.conversation.SetConversationMaxSeq:output_type -> eos.conversation.SetConversationMaxSeqResp
	23, // 72: eos.conversation.conversation.SetConversationMinSeq:output_type -> eos.conversation.SetConversationMinSeqResp
	25, // 73: eos.conversation.conversation.GetConversationIDs:output_type -> eos.conversation.GetConversationIDsResp
	27, // 74: eos.conversation.conversation.SetConversations:output_type -> eos.conversation.SetConversationsResp
	29, // 75: eos.conversation.conversation.GetUserConversationIDsHash:output_type -> eos.conversation.GetUserConversationIDsHashResp
	31, // 76: eos.conversation.conversation.GetConversationsByConversationID:output_type -> eos.conversation.GetConversationsByConversationIDResp
	33, // 77: eos.conversation.conversation.GetConversationOfflinePushUserIDs:output_type -> eos.conversation.GetConversationOfflinePushUserIDsResp
	35, // 78: eos.conversation.conversation.GetConversationNotReceiveMessageUserIDs:output_type -> eos.conversation.GetConversationNotReceiveMessageUserIDsResp
	37, // 79: eos.conversation.conversation.UpdateConversation:output_type -> eos.conversation.UpdateConversationResp
	39, // 80: eos.conversation.conversation.GetFullOwnerConversationIDs:output_type -> eos.conversation.GetFullOwnerConversationIDsResp
	41, // 81: eos.conversation.conversation.GetIncrementalConversation:output_type -> eos.conversation.GetIncrementalConversationResp
	43, // 82: eos.conversation.conversation.GetOwnerConversation:output_type -> eos.conversation.GetOwnerConversationResp
	45, // 83: eos.conversation.conversation.GetConversationsNeedClearMsg:output_type -> eos.conversation.GetConversationsNeedClearMsgResp
	47, // 84: eos.conversation.conversation.GetNotNotifyConversationIDs:output_type -> eos.conversation.GetNotNotifyConversationIDsResp
	49, // 85: eos.conversation.conversation.GetPinnedConversationIDs:output_type -> eos.conversation.GetPinnedConversationIDsResp
	51, // 86: eos.conversation.conversation.ClearUserConversationMsg:output_type -> eos.conversation.ClearUserConversationMsgResp
	53, // 87: eos.conversation.conversation.UpdateConversationsByUser:output_type -> eos.conversation.UpdateConversationsByUserResp
	63, // [63:88] is the sub-list for method output_type
	38, // [38:63] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_conversation_conversation_proto_init() }
func file_conversation_conversation_proto_init() {
	if File_conversation_conversation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_conversation_conversation_proto_rawDesc), len(file_conversation_conversation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   54,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_conversation_conversation_proto_goTypes,
		DependencyIndexes: file_conversation_conversation_proto_depIdxs,
		MessageInfos:      file_conversation_conversation_proto_msgTypes,
	}.Build()
	File_conversation_conversation_proto = out.File
	file_conversation_conversation_proto_goTypes = nil
	file_conversation_conversation_proto_depIdxs = nil
}
